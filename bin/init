#!/usr/bin/env bash

P=${BASH_SOURCE%/*}

. $P/colors
. $P/taskrunner

def_appname=$(echo ${PWD##*/} | tr -d -c '[:alnum:]')

bold "\nThis utility walks you through creating a React Native embryo App.\n"
printf "Press ^C at any time to quit.\n\n"

while [[ ! $confirm == [yY] ]]; do
  warning=0
  while [[ ! $appname ]]; do
    if [[ $warning == 1 ]]; then red "App name must not be empty"; fi
    green "? "
    bold "Choose a name for your App: "
    dark "[$def_appname] "
    read -r appname
    appname=${appname:-$def_appname}
    warning=1
  done
  warning=0
  lowercase=$(echo $appname | tr 'A-Z' 'a-z')
  def_bundleid="com.$lowercase"
  while [[ ! $bundleid =~ ^[a-z]+(\.[a-z]+)+$ ]]; do
    if [[ $warning == 1 ]]; then red "The bundle ID must contain only lowercase letters and dots\n"; fi
    green "? "
    bold "Choose a bundle ID: "
    dark "[$def_bundleid] "
    read -r bundleid
    bundleid=${bundleid:-$def_bundleid}
    warning=1
  done
  light "\n       Name: "
  blue $appname
  light "\n  Bundle ID: "
  blue $bundleid
  green "\n\n? "
  bold "Is this correct?"
  light " (Y/N) "
  bold ":"
  read -n 1 -r confirm
  echo
  if [[ ! $confirm == [yY] ]]
  then
    def_appname=$appname
    def_bundleid=$bundleid
    unset appname
    unset bundleid
  fi
done

echo

directories=(${bundleid//./ })

cd ios
rm -rf ./*.xcodeproj
cp -r ./Template/react-native-embryo.xcodeproj ./$appname.xcodeproj
LC_ALL=C find ./$appname.xcodeproj -type f -exec sed -i '' "s/react-native-embryo/$appname/g" {} \;
LC_ALL=C find ./$appname.xcodeproj -type f -exec sed -i '' "s/com.aino.embryo/$bundleid/g" {} \;
cd ..
taskDone "Xcode setup"

sed -E -i '' "s/ext.appName = \"[^\"]*\"/ext.appName = \"$appname\"/g" ./android/app/build.gradle
sed -E -i '' "s/ext.bundleId = \"[^\"]*\"/ext.bundleId = \"$bundleid\"/g" ./android/app/build.gradle
LC_ALL=C find ./android/app/src/main/java -type f -exec sed -E -i '' "s/package [a-z]+(\.[a-z]+)+/package $bundleid/g" {} \;
sed -E -i '' "s/package=\"[^\"]*\"/package=\"$bundleid\"/g" ./android/app/src/main/AndroidManifest.xml
cd android/app/src/main/java
find . -type f -name *.java -exec mv {} . \;
rm -r */
newdir=$(IFS=/; echo "${directories[*]}")
mkdir -p "$newdir"
mv *.java $newdir
cd ../../../../../
taskDone "Android setup"

mkdir -p ~/.gradle
if ! grep -q "EMBRYO" ~/.gradle/gradle.properties
then
  printf "\n\nREACT_NATIVE_EMBRYO_RELEASE_STORE_FILE=react-native-embryo.keystore" >> ~/.gradle/gradle.properties
  printf "\nREACT_NATIVE_EMBRYO_RELEASE_KEY_ALIAS=react-native-embryo" >> ~/.gradle/gradle.properties
  printf "\nREACT_NATIVE_EMBRYO_RELEASE_STORE_PASSWORD=123456" >> ~/.gradle/gradle.properties
  printf "\nREACT_NATIVE_EMBRYO_RELEASE_KEY_PASSWORD=123456" >> ~/.gradle/gradle.properties
  taskDone "Adding embryo keystore"
fi

sed -i '' "s/\"name\": \".*\"/\"name\": \"${appname}\"/" package.json
taskDone "Modifying package.json"

yarn  &>/dev/null & taskStart "Installing packages"
taskDone "Installing packages"

react-native link &>/dev/null & taskStart "Linking packages"
taskDone "Linking packages"

yarn run flow --silent &>/dev/null & taskStart "Initializing flow"
taskDone "Initializing flow"

green "\xE2\x9C\x94 Your embryo is ready!\n"

if [ "${PWD##*/}" != "react-native-embryo" ]
then
  blue "âœŒ Don't forget to create a new git repo with 'git init'\n\n"
  rm -rf ./.git
else
  echo
fi
